name: Project Delivery Action

on:
  push:
    branches: [ "main" ]


permissions:
  contents: read

jobs:

  Release:
    name: ðŸ§° Release
    #needs: [ Test ]
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        #with:
        #  token: ${{ env.PAT }}
        #  fetch-depth: '0'
        #env:
        #  PAT: ${{ secrets.CI_PAT }}

      - name: Git Setting
        run: |
          git config --global user.email "firas.gabsi@gmail.com"
          git config --global user.name "GABSI"

      #- run: git checkout dev

      - name: Get last version
        run: | 
          echo "CURRENT_VERSION=$(grep version composer.json | awk -F \" '{print $4}')" >> $GITHUB_ENV
          echo ${{ env.CURRENT_VERSION }}
          echo "TEMP=$(echo ${{env.CURRENT_VERSION}} | grep -o -E '[0-9]+' | head -1 | sed -e 's/^0\+//')" >> $GITHUB_ENV

      - name: Generate next version
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          echo ::set-env name=NEXT_VERSION::$((TEMP+1))'.0.0' 
          echo "NEXT_VERSION2=$(echo $NEXT_VERSION)" >> $GITHUB_ENV

      - name: Get last release date
        run: |
          echo "OLD_DATE=$(grep date composer.json | awk -F \" '{print $4}')" >> $GITHUB_ENV
          echo ${{ env.OLD_DATE }}

      - name: run number with offset
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          echo ::set-env name=CURRENT_DATE::$(date +'%d/%m/%Y')
          echo "CURRENT_DATE2=$(echo $CURRENT_DATE)" >> $GITHUB_ENV

      - name: Find and Replace Version
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: ${{ env.CURRENT_VERSION }}
          replace: ${{ env.NEXT_VERSION2 }}
          regex: false
          include: "composer.json"

      - name: Find and Replace Date
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: ${{ env.OLD_DATE }}
          replace: ${{ env.CURRENT_DATE2 }}
          regex: false
          include: "composer.json"

      - name: Create a Tag for the new release
        uses: rickstaa/action-create-tag@v1
        #with:
        #  token: ${{ env.PAT }}
        #  tag: ${{ env.CURRENT_VERSION }}

      - name: Push change in dev branch
        run: | 
          git add .
          git commit -m "Release "$NEXT_VERSION
          git push